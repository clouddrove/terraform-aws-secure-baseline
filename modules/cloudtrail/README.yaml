---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name : Terraform AWS Cloudtrail

# License of this project
license: "MIT"

# Canonical GitHub repo
github_repo: clouddrove/clouddrove/terraform-aws-secure-baseline/modules/cloudtrail

# Badges to display
badges:
  - name: "Terraform"
    image: "https://img.shields.io/badge/Terraform-v0.12-green"
    url: "https://www.terraform.io"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-MIT-blue.svg"
    url: "LICENSE.md"

#  description of this project
description: |-
  Terraform module to create an cloudtrail resource on AWS with S3 encryption with KMS key.

# extra content
include:
  - "terraform.md"

# How to use this project
usage : |-
  Here are some examples of how you can use this module in your inventory structure:

  ### Individual Account
  ```hcl
    module "cloudtrail" {
      source                            = "./../
      name                              = "trails"
      application                       = "clouddrove"
      environment                       = "test"
      label_order                       = ["environment", "application", "name"]
      enabled                           = true
      iam_role_name                     = "CloudTrail-CloudWatch-Delivery-Role"
      iam_role_policy_name              = "CloudTrail-CloudWatch-Delivery-Policy"
      account_type                      = "individual"
      key_deletion_window_in_days       = 10
      cloudwatch_logs_retention_in_days = 365
      cloudwatch_logs_group_name        = "cloudtrail-log-group"
      EVENT_IGNORE_LIST                 = jsonencode(["^Describe*", "^Assume*", "^List*", "^Get*", "^Decrypt*", "^Lookup*", "^BatchGet*", "^CreateLogStream$", "^RenewRole$", "^REST.GET.OBJECT_LOCK_CONFIGURATION$", "TestEventPattern", "TestScheduleExpression", "CreateNetworkInterface", "ValidateTemplate"])
      EVENT_ALERT_LIST                  = jsonencode(["DetachRolePolicy", "ConsoleLogin"])
      USER_IGNORE_LIST                  = jsonencode(["^awslambda_*", "^aws-batch$", "^bamboo*", "^i-*", "^[0-9]*$", "^ecs-service-scheduler$", "^AutoScaling$", "^AWSCloudFormation$", "^CloudTrailBot$", "^SLRManagement$"])
      SOURCE_LIST                       = jsonencode(["aws-sdk-go"])
      s3_bucket_name                    = "logs-bucket-clouddrove"
      slack_webhook                     = "https://hooks.slack.com/services/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GVEtJr46llqX"
      slack_channel                     = "testing"
    }
  ```

  ### Multi Account

  #### Master Account
  ```hcl
    module "cloudtrail" {
      source                            = "./../"
      name                              = "trails"
      application                       = "clouddrove"
      environment                       = "test"
      label_order                       = ["environment", "application", "name"]
      enabled                           = true
      iam_role_name                     = "CloudTrail-CloudWatch-Delivery-Role"
      iam_role_policy_name              = "CloudTrail-CloudWatch-Delivery-Policy"
      account_type                      = "master"
      key_deletion_window_in_days       = 10
      cloudwatch_logs_retention_in_days = 365
      cloudwatch_logs_group_name        = "cloudtrail-log-group"
      s3_bucket_name                    = "logs-bucket-clouddrove"
      slack_webhook                     = "https://hooks.slack.com/services/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Jr46llqX"
      slack_channel                     = "testing"
      EVENT_IGNORE_LIST                 = jsonencode(["^Describe*", "^Assume*", "^List*", "^Get*", "^Decrypt*", "^Lookup*", "^BatchGet*", "^CreateLogStream$", "^RenewRole$", "^REST.GET.OBJECT_LOCK_CONFIGURATION$", "TestEventPattern", "TestScheduleExpression", "CreateNetworkInterface", "ValidateTemplate"])
      EVENT_ALERT_LIST                  = jsonencode(["DetachRolePolicy", "ConsoleLogin"])
      USER_IGNORE_LIST                  = jsonencode(["^awslambda_*", "^aws-batch$", "^bamboo*", "^i-*", "^[0-9]*$", "^ecs-service-scheduler$", "^AutoScaling$", "^AWSCloudFormation$", "^CloudTrailBot$", "^SLRManagement$"])
      SOURCE_LIST                       = jsonencode(["aws-sdk-go"])
      additional_member_root_arn        = ["arn:aws:iam::xxxxxxxxxxx:root"]
      additional_member_trail           = ["arn:aws:cloudtrail:*:xxxxxxxxxxx:trail/*"]
      additional_member_account_id      = ["xxxxxxxxxxx"]
      additional_s3_account_path_arn    = ["arn:aws:s3:::logs-bucket-clouddrove/AWSLogs/xxxxxxxxxxx/*"]
    }
  ```

  #### Member Account
  ```hcl
    module "cloudtrail" {
      source                            = "./../"
      name                              = "trails"
      application                       = "clouddrove"
      environment                       = "test"
      label_order                       = ["environment", "application", "name"]
      enabled                           = true
      iam_role_name                     = "CloudTrail-cd-Delivery-Role"
      iam_role_policy_name              = "CloudTrail-cd-Delivery-Policy"
      account_type                      = "member"
      key_deletion_window_in_days       = 10
      cloudwatch_logs_retention_in_days = 365
      cloudwatch_logs_group_name        = "cloudtrail-log-group"
      key_arn                           = "arn:aws:kms:eu-west-1:xxxxxxxxxxx:key/66cc5610-3b90-460b-a177-af89e119fdaa"
      s3_bucket_name                    = "logs-bucket-clouddrove"
    }
  ```
